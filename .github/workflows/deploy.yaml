on:
  push:
    branches:
      - main
env:
  APP_PATH: .

jobs:
  lint:
    name: "Lint App"
    runs-on: ubuntu-latest
    environment: production

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    # Checkout the repository to the GitHub Actions runner
    steps:
      - uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "16.13.2"

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: npm-${{ hashFiles('package-lock.json') }}
          restore-keys: npm-

      - name: Install dependencies
        working-directory: ${{ env.APP_PATH }}
        run: npm ci --ignore-scripts

      - name: Linter
        working-directory: ${{ env.APP_PATH }}
        run: npm run lint

  test:
    name: "Test App"
    runs-on: ubuntu-latest
    environment: production

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    # Checkout the repository to the GitHub Actions runner
    steps:
      - uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "16.13.2"

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: npm-${{ hashFiles('package-lock.json') }}
          restore-keys: npm-

      - name: Install dependencies
        working-directory: ${{ env.APP_PATH }}
        run: npm ci --ignore-scripts

      - name: Cypress run
        uses: cypress-io/github-action@v4
        with:
          build: npm run build
          start: npm start

  build-and-deploy:
    needs: [lint]
    concurrency: ci-${{ github.ref }}
    environment: production
    runs-on: ubuntu-latest
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v3

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: npm-${{ hashFiles('package-lock.json') }}
          restore-keys: npm-

      - name: "Create env file"
        working-directory: ${{ env.APP_PATH }}
        run: |
          touch .env
          echo HONEYCOMB_DATASET=${{ secrets.HONEYCOMB_DATASET }} >> .env
          echo HONEYCOMB_WRITE_KEY=${{ secrets.HONEYCOMB_WRITE_KEY }} >> .env
          echo HONEYCOMB_SERVICE_NAME=${{ secrets.HONEYCOMB_SERVICE_NAME }} >> .env
          cat .env

      - name: Install dependencies
        working-directory: ${{ env.APP_PATH }}
        run: |
          npm ci --ignore-scripts
          npm run build

      - name: Deploy 🚀
        uses: JamesIves/github-pages-deploy-action@v4.2.5
        with:
          branch: gh-pages
          folder: dist
